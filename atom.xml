<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shiinapple&#39;s Blog</title>
  <icon>https://shiinapple.github.io/icon.png</icon>
  
  <link href="https://shiinapple.github.io/atom.xml" rel="self"/>
  
  <link href="https://shiinapple.github.io/"/>
  <updated>2025-06-25T06:21:40.674Z</updated>
  <id>https://shiinapple.github.io/</id>
  
  <author>
    <name>Yumemi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>py爬虫项目一_爬取学校练习题答案</title>
    <link href="https://shiinapple.github.io/2025/06/25/py%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE%E4%B8%80_%E7%88%AC%E5%8F%96%E5%AD%A6%E6%A0%A1%E7%BB%83%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%88/"/>
    <id>https://shiinapple.github.io/2025/06/25/py%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE%E4%B8%80_%E7%88%AC%E5%8F%96%E5%AD%A6%E6%A0%A1%E7%BB%83%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%88/</id>
    <published>2025-06-25T06:09:00.645Z</published>
    <updated>2025-06-25T06:21:40.674Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="观察网站"><a href="#观察网站" class="headerlink" title="观察网站"></a>观察网站</h2><p>查看源代码只有网站外观设计后,发现F12抓包后名为[practice]的文件内有“label”和”questionBh”两个题目号<br><img src="/images/4.png" alt="练习题目首页"><br>点进题目后再点击查看答案,抓包的文件”data”中就有完整的答案<br><img src="/.io//3.png" alt="点进一道题目,并点击参考答案"><br>点开第二次抓包的标头,发现url是http:&#x2F;&#x2F;[一些域名]&#x3D;{questionBh}<br><img src="/.io//4.png" alt="点开第二次抓包的标头"><br>我们可以通过 label -&gt; questionBh -&gt; answer</p><h2 id="写代码"><a href="#写代码" class="headerlink" title="写代码"></a>写代码</h2><h1 id="先进行-label-questionBh-的步骤"><a href="#先进行-label-questionBh-的步骤" class="headerlink" title="先进行 label -&gt; questionBh 的步骤"></a>先进行 label -&gt; questionBh 的步骤</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">url = <span class="string">f&#x27;http://[一些域名]/api/exam/question/practice&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;user-agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">resp = requests.get(url,headers=headers)</span><br><span class="line"></span><br><span class="line">obj = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&quot;label&quot;:&quot;（(?P&lt;num&gt;.*?)）(?P&lt;none&gt;.*?)questionBh&quot;:&quot;(?P&lt;web&gt;.*?)&quot;&#x27;</span>,re.S)</span><br><span class="line">result = obj.finditer(resp.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">    <span class="built_in">print</span>(i.group(<span class="string">&quot;num&quot;</span>,<span class="string">&quot;web&quot;</span>))</span><br><span class="line"></span><br><span class="line">resp.close()</span><br></pre></td></tr></table></figure><p>再对得到的格式进行一些调整,并变成csv格式,示例如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num,questionBh</span><br><span class="line">5,02ac8e3a76404d668bea36a31c90fc7b</span><br><span class="line">*,********************************</span><br></pre></td></tr></table></figure><h1 id="再进行-questionBh-answer-的步骤"><a href="#再进行-questionBh-answer-的步骤" class="headerlink" title="再进行 questionBh -&gt; answer 的步骤"></a>再进行 questionBh -&gt; answer 的步骤</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">query= <span class="built_in">input</span>(<span class="string">&quot;输入你想搜索的东西\n&quot;</span>)</span><br><span class="line">url = <span class="string">f&#x27;http://[一些域名]/api/exam/question/getAnswer?questionBh=<span class="subst">&#123;query&#125;</span>&amp;studentId=2024011666&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;user-agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">resp = requests.get(url,headers=headers)</span><br><span class="line"></span><br><span class="line">obj = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&quot;data&quot;:&quot;(?P&lt;ans&gt;.*?)&quot;&#125;&#x27;</span>,re.S)</span><br><span class="line">result = obj.finditer(resp.text)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="整合代码-通过csv文件串联起来"><a href="#整合代码-通过csv文件串联起来" class="headerlink" title="整合代码,通过csv文件串联起来"></a>整合代码,通过csv文件串联起来</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_mapping</span>(<span class="params">file_path</span>):</span><br><span class="line">    mapping = &#123;&#125;</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, mode=<span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-16be&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        reader = csv.reader(file)</span><br><span class="line">        <span class="built_in">next</span>(reader)  </span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">            num, questionBh = row</span><br><span class="line">            mapping[num] = questionBh</span><br><span class="line">    <span class="keyword">return</span> mapping</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_question_bh</span>(<span class="params">num, mapping</span>):</span><br><span class="line">    <span class="keyword">return</span> mapping.get(num, <span class="string">&quot;Not Found&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">file_path = <span class="string">&#x27;mapping.csv&#x27;</span></span><br><span class="line"></span><br><span class="line">k = <span class="built_in">input</span>(<span class="string">&quot;输入题号:&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mapping = load_mapping(file_path)</span><br><span class="line"></span><br><span class="line">question_bh = get_question_bh(k, mapping)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;生成的 questionBh: <span class="subst">&#123;question_bh&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">k = <span class="string">f&quot;<span class="subst">&#123;question_bh&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">f&#x27;http://[一些域名]/api/exam/question/getAnswer?questionBh=<span class="subst">&#123;k&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;user-agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">resp = requests.get(url,headers=headers)</span><br><span class="line"></span><br><span class="line">obj = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&quot;data&quot;:&quot;(?P&lt;ans&gt;.*?)&quot;&#125;&#x27;</span>,re.S)</span><br><span class="line">result = obj.finditer(resp.text)</span><br></pre></td></tr></table></figure><h1 id="使用-ast-解析转义字符"><a href="#使用-ast-解析转义字符" class="headerlink" title="使用 ast 解析转义字符"></a>使用 ast 解析转义字符</h1><p>笔者在学习中发现,使用 ast.literal_eval() 解析转义字符可以消除多余字符的影响,省去了复制到ai转换的麻烦</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ans_list = [i.group(<span class="string">&quot;ans&quot;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> result]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将列表中的所有内容连接成一个字符串</span></span><br><span class="line">a = <span class="string">&#x27;&#x27;</span>.join(ans_list)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 ast.literal_eval() 安全地解析转义字符</span></span><br><span class="line">escaped_text = ast.literal_eval(<span class="string">f&#x27;&quot;&quot;&quot;<span class="subst">&#123;a&#125;</span>&quot;&quot;&quot;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(escaped_text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">resp.close()</span><br></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> ast</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_mapping</span>(<span class="params">file_path</span>):</span><br><span class="line">    mapping = &#123;&#125;</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, mode=<span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-16be&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        reader = csv.reader(file)</span><br><span class="line">        <span class="built_in">next</span>(reader)  <span class="comment"># 跳过标题行</span></span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">            num, questionBh = row</span><br><span class="line">            mapping[num] = questionBh</span><br><span class="line">    <span class="keyword">return</span> mapping</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_question_bh</span>(<span class="params">num, mapping</span>):</span><br><span class="line">    <span class="keyword">return</span> mapping.get(num, <span class="string">&quot;Not Found&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例输入</span></span><br><span class="line">file_path = <span class="string">&#x27;mapping.csv&#x27;</span></span><br><span class="line"></span><br><span class="line">k = <span class="built_in">input</span>(<span class="string">&quot;输入题号:&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载对应关系</span></span><br><span class="line">mapping = load_mapping(file_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取对应的 questionBh</span></span><br><span class="line">question_bh = get_question_bh(k, mapping)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;生成的 questionBh: <span class="subst">&#123;question_bh&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">k = <span class="string">f&quot;<span class="subst">&#123;question_bh&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">f&#x27;http://[一些域名]//api/exam/question/getAnswer?questionBh=<span class="subst">&#123;k&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;user-agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">resp = requests.get(url,headers=headers)</span><br><span class="line"></span><br><span class="line">obj = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&quot;data&quot;:&quot;(?P&lt;ans&gt;.*?)&quot;&#125;&#x27;</span>,re.S)</span><br><span class="line">result = obj.finditer(resp.text)</span><br><span class="line"></span><br><span class="line">ans_list = [i.group(<span class="string">&quot;ans&quot;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> result]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将列表中的所有内容连接成一个字符串</span></span><br><span class="line">a = <span class="string">&#x27;&#x27;</span>.join(ans_list)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 ast.literal_eval() 安全地解析转义字符</span></span><br><span class="line">escaped_text = ast.literal_eval(<span class="string">f&#x27;&quot;&quot;&quot;<span class="subst">&#123;a&#125;</span>&quot;&quot;&quot;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(escaped_text)</span><br><span class="line"></span><br><span class="line">resp.close()</span><br></pre></td></tr></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>生成结果如下图,经过修改后可以直接复制到提交窗口使用啦<br><img src="/.io//5.png" alt="生成结果"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.bilibili.com/video/BV1uN4y1W7Du/?share_source=copy_web&vd_source=5b8c697c5abbf6001d6b8db9c52cd10b">[bilibili]Python爬虫教程</a>       通过视频,我学习了抓包方法,re,正则表达式,最简单的通信原理<br><a href="https://tool.oschina.net/regex">在线正则表达式测试</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>py爬虫格式</title>
    <link href="https://shiinapple.github.io/2024/11/01/%E7%88%AC%E8%99%AB%E6%A0%BC%E5%BC%8F/"/>
    <id>https://shiinapple.github.io/2024/11/01/%E7%88%AC%E8%99%AB%E6%A0%BC%E5%BC%8F/</id>
    <published>2024-11-01T08:17:30.224Z</published>
    <updated>2024-12-04T05:05:57.955Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="get"><a href="#get" class="headerlink" title="get"></a>get</h2><p>import requests<br>query&#x3D; input(“输入你想搜索的东西\n”)<br>url &#x3D; f’<a href="https://www.sogou.com/web?query=%7Bquery%7D">https://www.sogou.com/web?query={query}</a>‘</p><p>headers &#x3D; {<br>    “user-agent”:”Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;130.0.0.0 Safari&#x2F;537.36 Edg&#x2F;130.0.0.0”<br>}<br>resp &#x3D; requests.get(url,headers&#x3D;headers)</p><p>print(resp)<br>print(resp.text)<br>resp.close()</p><h2 id="post"><a href="#post" class="headerlink" title="post"></a>post</h2><p>import requests</p><p>url &#x3D; “<a href="https://fanyi.baidu.com/sug">https://fanyi.baidu.com/sug</a>“</p><p>word&#x3D;input(“输入想翻译的单词”)<br>dat&#x3D;{<br>    “kw”:word<br>}</p><p>resp &#x3D; requests.post(url,data&#x3D;dat)<br>print(resp.json())<br>resp.close()</p><h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><p>import re<br>import csv</p><h1 id="findall-很小的文件可以用"><a href="#findall-很小的文件可以用" class="headerlink" title="findall 很小的文件可以用"></a>findall 很小的文件可以用</h1><p>lst&#x3D;re.findall(r”\d+”,”my10086”)<br>print(lst)</p><h1 id="finditer-迭代器-最常用"><a href="#finditer-迭代器-最常用" class="headerlink" title="finditer 迭代器?最常用"></a>finditer 迭代器?最常用</h1><p>it&#x3D;re.finditer(r”\d+”,”my10086”)<br>for i in it:<br>    print(i.group())</p><h1 id="search只找到一个结果就返回"><a href="#search只找到一个结果就返回" class="headerlink" title="search只找到一个结果就返回"></a>search只找到一个结果就返回</h1><p>#search返回是match对象,拿数据要.group()<br>lst&#x3D;re.search(r”\d+”,”my10086”)<br>print(lst.group())</p><h1 id="match必须从头匹配"><a href="#match必须从头匹配" class="headerlink" title="match必须从头匹配"></a>match必须从头匹配</h1><p>s &#x3D; re.match(r”\d+”,”my10086”)<br>print(s.group())</p><h1 id="预加载正则表达式"><a href="#预加载正则表达式" class="headerlink" title="预加载正则表达式"></a>预加载正则表达式</h1><p>obj &#x3D; re.compile(r”\d+”)<br>it &#x3D; obj.finditer(“1234”)<br>for i in it:<br>    print(i.group())</p><p>it &#x3D; obj.finditer(“5678”)<br>for i in it:<br>    print(i.group())</p><h1 id="查找限定组"><a href="#查找限定组" class="headerlink" title="查找限定组"></a>查找限定组</h1><p>obj &#x3D; re.compile(“xxx.<em>?xxx(?P<name>.</name></em>?)”,re.S)<br>result &#x3D; obj.finditer(s)<br>#取所有组<br>for i in result:<br>    print(i.group())<br>#取某个组 #(?P<name>正则)<br>for i in result:<br>    print(i.group(“name”))</name></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【置顶】收藏夹</title>
    <link href="https://shiinapple.github.io/2024/09/26/%E6%94%B6%E8%97%8F%E5%A4%B9/"/>
    <id>https://shiinapple.github.io/2024/09/26/%E6%94%B6%E8%97%8F%E5%A4%B9/</id>
    <published>2024-09-26T11:24:18.047Z</published>
    <updated>2024-10-21T07:46:12.597Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-pHSHZlcg" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="12654282371" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><p><a href="https://app.simplenote.com/">simplenote</a><br><a href="https://www.onlinegdb.com/">onlinegdb</a></p><h2 id="LLMs"><a href="#LLMs" class="headerlink" title="LLMs"></a>LLMs</h2><p><a href="https://www.perplexity.ai/">perplexity</a><br><a href="https://huggingface.co/chat/">huggingface</a><br><a href="https://chat.deepseek.com/coder">deepseek</a><br><a href="https://chatglm.cn/main/alltoolsdetail?lang=zh">智谱清言</a><br><a href="https://metaso.cn/">秘塔</a><br> <span id="more"></span><br><a href="https://kimi.moonshot.cn/">kimi</a><br><a href="https://code.fittentech.com/">fitten code</a></p><h2 id="AI"><a href="#AI" class="headerlink" title="AI"></a>AI</h2><p><a href="https://gptzero.me/">gotzero</a><br><a href="https://www.wolframalpha.com/">wolframalpha</a><br><a href="https://suno.com/">suno</a><br><a href="https://www.pixcakeai.com/ability">PixCake AI精修图片</a><br><a href="https://www.iopaint.com/?ref=ai-bot.cn">IOPaint 图像背景抹除</a><br><a href="https://github.com/RVC-Boss/GPT-SoVITS/blob/main/docs/cn/README.md">GPT-SoVITS-WebUI</a></p><h2 id="算法题库"><a href="#算法题库" class="headerlink" title="算法题库"></a>算法题库</h2><p><a href="https://ac.nowcoder.com/">牛客</a><br><a href="https://leetcode.cn/">leetcode</a><br><a href="https://www.luogu.com.cn/">洛谷</a><br><a href="https://codeforces.com/">codeforces</a><br><a href="https://cftracker.netlify.app/contests">CFTracker</a></p><h2 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h2><p><a href="https://www.starrycoding.com/">starrycoding</a><br><a href="https://www.icourse163.org/">MOOC</a><br><a href="https://www.coursera.org/?msockid=18a2e3d6c3776c4a34cff713c2a56de3">coursera</a><br><a href="https://www.edx.org/">edX</a><br><a href="https://www.freecodecamp.org/learn/">freecodecamp</a></p><h2 id="文字教程"><a href="#文字教程" class="headerlink" title="文字教程"></a>文字教程</h2><p><a href="https://www.r2coding.com/#/">r2coding</a><br><a href="https://www.runoob.com/">runoob</a><br><a href="https://csdiy.wiki/CS%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/#_1">CS自学指南</a><br><a href="https://oi-wiki.org/">OI Wiki</a><br><a href="https://csguide.cn/roadmap/">编程指北</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><a href="https://www.klippel.de/listeningtest/">listening test</a></p><h2 id="二次元"><a href="#二次元" class="headerlink" title="二次元"></a>二次元</h2><p><a href="https://www.falesti.me/?ref=acgdh.cc">宅方社</a></p><h2 id="电子书"><a href="#电子书" class="headerlink" title="电子书"></a>电子书</h2><p><a href="https://www.manongbook.com/">码农书籍库</a><br><a href="http://www.banshujiang.cn/">搬书匠</a></p>]]></content>
    
    
    <summary type="html">&lt;div id=&quot;aplayer-pHSHZlcg&quot; class=&quot;aplayer aplayer-tag-marker meting-tag-marker&quot; data-id=&quot;12654282371&quot; data-server=&quot;netease&quot; data-type=&quot;playlist&quot; data-mode=&quot;circulation&quot; data-autoplay=&quot;false&quot; data-mutex=&quot;false&quot; data-listmaxheight=&quot;340px&quot; data-preload=&quot;none&quot; data-theme=&quot;#ad7a86&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;常用工具&quot;&gt;&lt;a href=&quot;#常用工具&quot; class=&quot;headerlink&quot; title=&quot;常用工具&quot;&gt;&lt;/a&gt;常用工具&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://app.simplenote.com/&quot;&gt;simplenote&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.onlinegdb.com/&quot;&gt;onlinegdb&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;LLMs&quot;&gt;&lt;a href=&quot;#LLMs&quot; class=&quot;headerlink&quot; title=&quot;LLMs&quot;&gt;&lt;/a&gt;LLMs&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.perplexity.ai/&quot;&gt;perplexity&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://huggingface.co/chat/&quot;&gt;huggingface&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://chat.deepseek.com/coder&quot;&gt;deepseek&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://chatglm.cn/main/alltoolsdetail?lang=zh&quot;&gt;智谱清言&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://metaso.cn/&quot;&gt;秘塔&lt;/a&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>blog维护和美化</title>
    <link href="https://shiinapple.github.io/2024/09/25/blog%E7%BB%B4%E6%8A%A4%E5%92%8C%E7%BE%8E%E5%8C%96/"/>
    <id>https://shiinapple.github.io/2024/09/25/blog%E7%BB%B4%E6%8A%A4%E5%92%8C%E7%BE%8E%E5%8C%96/</id>
    <published>2024-09-25T14:51:36.405Z</published>
    <updated>2024-10-05T16:12:17.363Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="感谢在搭建blog时参考的文章"><a href="#感谢在搭建blog时参考的文章" class="headerlink" title="感谢在搭建blog时参考的文章"></a>感谢在搭建blog时参考的文章</h2><p><a href="https://zhuanlan.zhihu.com/p/618864711#:~:text=%E6%88%91%E7%9A%84%E4%B8%BB%E9%A2%98%E6%98%AF%20ne">(zhihu)Hexo+Next主题搭建个人博客+优化全过程</a><br><a href="https://lcdzzz.github.io/2022/11/05/hexo-bo-ke-an-zhuang-jiao-cheng-tai-jiao-ji/#:~:text=Hexo%20%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E6%9C%AC%E5%9C%B0%E9%A2%84%E8%A7%88%20%E5%88%9D%E5%A7%8B%E5%8C%96%E5%B9%B6%E5%AE%89%E8%A3%85%E6%89%80%E9%9C%80%E7%BB%84%E4%BB%B6%EF%BC%9A%20hexo%20init%20%23%20%E5%88%9D%E5%A7%8B%E5%8C%96npminstall%23%20%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B6,%23%20%E7%94%9F%E6%88%90%E9%A1%B5%E9%9D%A2hexo%20s%20%23%20%E5%90%AF%E5%8A%A8%E9%A2%84%E8%A7%88%20%E8%AE%BF%E9%97%AEhttp%3A%2F%2Flocalhost%3A4000%EF%BC%8C%E5%87%BA%E7%8E%B0%20Hexo%20%E9%BB%98%E8%AE%A4%E9%A1%B5%E9%9D%A2%EF%BC%8C%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F%EF%BC%81">(个人)hexo 博客安装教程 胎教级</a><br><a href="https://github.com/xiazeyu/live2d-widget-models">(github)live2d models</a><br><a href="https://blog.wangjiezhe.com/posts/2018-10-29-Hexo-NexT-2/">(个人)Hexo NexT 魔改系列之二 ── 搜索篇</a><br><a href="https://fuguigui.github.io/hexo2/#:~:text=%E6%9C%89%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95%EF%BC%9A%20%E4%BD%BF">(个人)一次完整的Hexo写作流程</a><br><a href="https://tieba.baidu.com/p/9074309646">(贴吧)本地访问正常但部署到GitHub上访问就出问题</a><br><a href="https://blog.csdn.net/qq_32767041/article/details/103284345#:~:text=NexT%20%E9%BB%98%E8%AE%A4%E4%B8%8D">(cnds)Hexo 搭建个人博客（八）NexT 侧边栏配置</a><br><a href="https://blog.csdn.net/as480133937/article/details/100138838">(cnds)Hexo-Next 主题博客个性化配置超详细，超全面(两万字)</a><br><a href="https://fuguigui.github.io/hexo2/#:~:text=%E6%9C%89%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95%EF%BC%9A%20%E4%BD%BF">(个人)一次完整的Hexo写作流程</a><br><a href="https://blog.wangjiezhe.com/posts/2018-10-29-Hexo-NexT-2/">(个人)Hexo NexT 魔改系列之二 ── 搜索篇</a><br><a href="https://leezhiy.github.io/2020/04/11/2020-04-11-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%EF%BC%88%E6%B7%BB%E5%8A%A0%E7%BD%91%E9%A1%B5%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8%EF%BC%89/#%E4%BD%BF%E7%94%A8-hexo-tag-aplayer-%E6%8F%92%E4%BB%B6">(个人)Hexo+Next 搭建个人博客 （添加网页音乐播放器）</a></p><h2 id="今后的想完成的美化"><a href="#今后的想完成的美化" class="headerlink" title="今后的想完成的美化"></a>今后的想完成的美化</h2><p>暂无</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://shiinapple.github.io/2024/09/23/hello-world/"/>
    <id>https://shiinapple.github.io/2024/09/23/hello-world/</id>
    <published>2024-09-23T15:07:20.854Z</published>
    <updated>2024-09-27T01:19:58.302Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p> <span id="more"></span> <h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
